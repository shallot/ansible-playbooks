# Copyright (c) 2021-present eyeo GmbH
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---

filter_list_origin_logs:
  "{{ filter_list_origin_base_dir }}/log"
filter_list_origin_inputs_hg:
  "{{ filter_list_origin_base_dir }}/subscription"
filter_list_origin_inputs_git:
  "{{ filter_list_origin_base_dir }}/subscription-git"
filter_list_origin_inputs:
  "{{ (filter_list_origin_remote_git is defined)
    | ternary(filter_list_origin_inputs_git | default('fail'),
              filter_list_origin_inputs_hg)
    }}"
filter_list_origin_outputs:
  "{{ filter_list_origin_base_dir }}/generated"
filter_list_origin_archive:
  "{{ filter_list_origin_base_dir }}/archive"
filter_list_origin_final_output:
  "{{ filter_list_origin_base_dir }}/final_output"

# tasks/users.yml
filter_list_origin_custom_users__to_merge:
  "{{ filter_list_origin_mirror_user }}":
    name: "{{ filter_list_origin_mirror_user }}"
    comment: "Filter list mirror user"
    shell: "/bin/sh"
    home: "{{ filter_list_origin_base_dir }}"

# tasks/paths.yml
filter_list_origin_ssh_keys_dirs_custom_paths__to_merge:
  "{{ filter_list_origin_base_dir }}/.ssh":
    dest: "{{ filter_list_origin_base_dir }}/.ssh"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0700"

filter_list_origin_mirror_server_key_location:
  "{{ filter_list_origin_base_dir }}/.ssh/id_rsa"

# tasks/ssh-keys.yml
filter_list_origin_mirror_custom_ssh_keys__to_merge:
  id_rsa:
    dest: "{{ filter_list_origin_mirror_server_key_location }}"
    type: "rsa"
    size: 4096
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"

# tasks/authorized-keys.yml
filter_list_origin_custom_authorized_keys__to_merge:
  "{{ filter_list_origin_mirror_user }}":
    user: "{{ filter_list_origin_mirror_user }}"
    key: "{{ filter_list_origin_mirror_ssh_key }}"
    key_options:
      - "no-agent-forwarding"
      - "no-port-forwarding"
      - "no-pty"
      - "no-X11-forwarding"
      # NB: this used to live in the equivalent of sshd_config__to_merge,
      # but once the remote user connects with this key, they can't override
      # the command anyway
      - >-
        command="rsync --server --sender -vltprz --delete-excluded
        {{ filter_list_origin_final_output }}"

# tasks/paths.yml
filter_list_origin_update_repos_custom_paths__to_merge:
  "{{ filter_list_origin_base_dir }}/rotate-final-output":
    dest: "{{ filter_list_origin_base_dir }}/rotate-final-output"
    src: "files/filter-list-origin-host/rotate-final-output"
    state: "template"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0644"
  "{{ filter_list_origin_base_dir }}/compose_final_output.sh":
    dest: "{{ filter_list_origin_base_dir }}/compose_final_output.sh"
    src: "files/filter-list-origin-host/compose_final_output.sh"
    state: "template"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0755"
  "{{ filter_list_origin_base_dir }}/compound_webroot_structure.sh":
    dest: "{{ filter_list_origin_base_dir }}/compound_webroot_structure.sh"
    src: "files/filter-list-origin-host/compound_webroot_structure.sh"
    state: "template"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0755"
  "{{ filter_list_origin_base_dir }}/compress_files.sh":
    dest: "{{ filter_list_origin_base_dir }}/compress_files.sh"
    src: "files/filter-list-origin-host/compress_files.sh"
    state: "template"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0755"
  "{{ filter_list_origin_base_dir }}/fetch_gitlab_artifacts.sh":
    dest: "{{ filter_list_origin_base_dir }}/fetch_gitlab_artifacts.sh"
    src: "files/filter-list-origin-host/fetch_gitlab_artifacts.sh"
    state: "template"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0755"
  "{{ filter_list_origin_base_dir }}/fetch_gstorage_artifacts.sh":
    dest: "{{ filter_list_origin_base_dir }}/fetch_gstorage_artifacts.sh"
    src: "files/filter-list-origin-host/fetch_gstorage_artifacts.sh"
    state: "template"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
    mode: "0755"
  "{{ filter_list_origin_logs }}":
    dest: "{{ filter_list_origin_logs }}"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
  "{{ filter_list_origin_inputs }}":
    dest: "{{ filter_list_origin_inputs }}"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
  "{{ filter_list_origin_outputs }}":
    dest: "{{ filter_list_origin_outputs }}"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
  "{{ filter_list_origin_archive }}":
    dest: "{{ filter_list_origin_archive }}"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
  "{{ filter_list_origin_outputs }}/gitlab_artifacts":
    dest: "{{ filter_list_origin_outputs }}/gitlab_artifacts"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"
  "{{ filter_list_origin_outputs }}/gstorage_artifacts":
    dest: "{{ filter_list_origin_outputs }}/gstorage_artifacts"
    state: "directory"
    owner: "{{ filter_list_origin_mirror_user }}"
    group: "{{ filter_list_origin_mirror_user }}"

# tasks/packages.yml
filter_list_origin_custom_packages__to_merge:
  p7zip-full: "present"
  curl: "present"
  jq: "present"
  git: "present"
  rsync: "present"
  wget: "present"

filter_list_origin_gitlab_artifacts_command: >-
  savelog -c {{ filter_list_origin_save_logs }} -qnl
  {{ filter_list_origin_logs }}/fetch_gitlab_artifacts.log &&
  (
  {%- set filter_list_origin_gitlab_artifact_repos=filter_list_origin_repos
    | dict2items
    | selectattr('value.gitlab_artifacts', 'defined')
    | selectattr('value.gitlab_artifacts')
    | selectattr('value.destination', 'defined')
    | items2dict
    -%}
  {%- for key, value in filter_list_origin_gitlab_artifact_repos | dictsort -%}
  {{ filter_list_origin_base_dir }}/fetch_gitlab_artifacts.sh
  {{ filter_list_origin_inputs }}/{{ key }}
  {{ filter_list_origin_outputs }}/gitlab_artifacts/{{ value.destination }}
  {{- "" if loop.last else " && " -}}
  {%- endfor -%}
  ) >
  {{ filter_list_origin_logs }}/fetch_gitlab_artifacts.log

filter_list_origin_gstorage_artifacts_command: >-
  savelog -c {{ filter_list_origin_save_logs }} -qnl
  {{ filter_list_origin_logs }}/fetch_gstorage_artifacts.log &&
  (
  {%- set filter_list_origin_gstorage_artifact_repos=filter_list_origin_repos
    | dict2items
    | selectattr('value.gstorage_artifacts', 'defined')
    | selectattr('value.gstorage_artifacts')
    | selectattr('value.destination', 'defined')
    | selectattr('value.source', 'defined')
    | items2dict
    -%}
  {%- for key, value in filter_list_origin_gstorage_artifact_repos
    | dictsort -%}
  {{ filter_list_origin_base_dir }}/fetch_gstorage_artifacts.sh
  {{ filter_list_origin_inputs }}/{{ value.destination }}
  {{ filter_list_origin_outputs }}/gstorage_artifacts
  {{ value.source }}
  {{ value.filter | default("") }}
  {{ value.diff_retention | default("") }}
  {{ value.manifest | default("") }}
  "{{ value.includes | default(["*","*/"]) | join("\r") }}"
  {{- "" if loop.last else " && " -}}
  {%- endfor -%}
  ) >
  {{ filter_list_origin_logs }}/fetch_gstorage_artifacts.log

filter_list_origin_output_final_command: >-
  savelog -c {{ filter_list_origin_save_logs }} -qnl
  {{ filter_list_origin_logs }}/compose_final_output.log &&
  {{ filter_list_origin_base_dir }}/compose_final_output.sh
  {{ webroot_compound_link_globs | default("") | join(" ") }} >
  {{ filter_list_origin_logs }}/compose_final_output.log

# tasks/cron-jobs.yml
filter_list_origin_custom_cron_jobs__to_merge:
  gitlab_artifacts:
    name: "gitlab_artifacts"
    minute: "{{ filter_list_origins_gitlab_artifacts_cron_job_time }}"
    user: "{{ filter_list_origin_mirror_user }}"
    job: "{{ filter_list_origin_gitlab_artifacts_command
           | replace('%', '\\%') }}"
  gstorage_artifacts:
    name: "gstorage_artifacts"
    minute: "{{ filter_list_origins_gstorage_artifacts_cron_job_time }}"
    user: "{{ filter_list_origin_mirror_user }}"
    job: "{{ filter_list_origin_gstorage_artifacts_command
           | replace('%', '\\%') }}"
  output_final:
    name: "output_final"
    minute: "{{ filter_list_origin_output_final_cron_job_time }}"
    user: "{{ filter_list_origin_mirror_user }}"
    job: "{{ filter_list_origin_output_final_command
           | replace('%', '\\%') }}"

# tasks/shells.yml
filter_list_origin_cron_custom_shells__to_merge:
  filter_list_origin_1_first_gitlab_artifacts:
    cmd: "{{ filter_list_origin_gitlab_artifacts_command }}"
    become_user: "{{ filter_list_origin_mirror_user }}"
  filter_list_origin_1_first_gstorage_artifacts:
    cmd: "{{ filter_list_origin_gstorage_artifacts_command }}"
    become_user: "{{ filter_list_origin_mirror_user }}"
  filter_list_origin_2_first_output_final:
    cmd: "{{ filter_list_origin_output_final_command }}"
    become_user: "{{ filter_list_origin_mirror_user }}"
