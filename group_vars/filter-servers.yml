# Copyright (c) 2021-present eyeo GmbH
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---

filter_server_custom_packages__to_merge:
  wget: "present"

filter_server_custom_users__to_merge:
  rsync:
    name: "{{ filter_server_mirror_user }}"
    comment: "Filter lists mirror user"

filter_server_document_root_path:
  "/var/www/easylist"

filter_server_custom_paths__to_merge:
  /var/www:
    state: "directory"
    mode: "0755"
  /var/www/easylist:
    dest: "{{ filter_server_document_root_path }}"
    state: "directory"
    mode: "0755"
    owner: "{{ filter_server_mirror_user }}"

filter_server_custom_cron_jobs__to_merge:
  mirror:
    name: "mirror_filter_lists"
    minute: "{{ filter_server_mirror_cron_job_minute }}"
    user: "{{ filter_server_mirror_user }}"
    # yamllint disable rule:line-length
    job: >-
      rsync -e "ssh -o CheckHostIP=no" -ltprz --delete --max-delete={{ filter_origin_max_delete }} {{ filter_origin_server_spec }}:. {{ filter_server_document_root_path }}/
    # yamllint enable rule:line-length

# roles/apache2/tasks/main.yml
# provision-apache2-servers.yml
filter_server_apache2_modules__to_merge:
  rewrite: &apache2_standard_module
    package: false
  headers:
    *apache2_standard_module
  brotli:
    *apache2_standard_module
  geoip: &apache2_nonstandard_module
    package: true

# yamllint disable rule:line-length
# This replicates legacy/infrastructure's modules/filterserver/files/site.conf
filter_server_custom_apache_config: |
  RewriteEngine on

  {{ filter_server_keepalive_custom_apache_config
   | default(default_filter_server_keepalive_custom_apache_config) }}

  {{ filter_server_prerequisite_custom_apache_config
   | default(default_filter_server_prerequisite_custom_apache_config) }}

  {{ filter_server_skip_mod_brotli_config
   | default(default_filter_server_skip_mod_brotli_config) }}

  {{ filter_server_skip_mod_deflate_config
   | default(default_filter_server_skip_mod_deflate_config) }}

  # Previously here listed rewrite rules have been moved to {{ filter_server_document_root_path }}/.htaccess
  # due to the responsibility shift to FLOPS

default_filter_server_keepalive_custom_apache_config: |
  KeepAlive On
  KeepAliveTimeout 0

default_filter_server_prerequisite_custom_apache_config: |
  DocumentRoot {{ filter_server_document_root_path }}

   <Directory {{ filter_server_document_root_path }}>
     Options -Indexes
     AllowOverride All
     Order allow,deny
     Allow from all
  </Directory>

  # Set Etag based content rather then the last modified date (mtime) to allow
  # newly generated filer list files with unchanged content to be cached.
  # https://httpd.apache.org/docs/2.4/en/mod/core.html#fileetag
  FileETag Digest Size

  AddDefaultCharset UTF-8

  RewriteCond %{HTTP_HOST} "^(.+)\.$" [NC]
  RewriteRule "^(.*)" %{REQUEST_SCHEME}://%1$1 [R,L]

  GeoIPEnable On
  GeoIPDBFile {{ custom_geoip_data_path }}/{{ custom_geoip_data_country_ipv4 }} CheckCache
  GeoIPDBFile {{ custom_geoip_data_path }}/{{ custom_geoip_data_country_ipv6 }} CheckCache

# This replicates legacy/infrastructure's modules/filterserver/files/site.conf
# gzip_static setting and is based on the example from:
# https://httpd.apache.org/docs/2.4/mod/mod_deflate.html#precompressed
default_filter_server_skip_mod_deflate_config: |
  # Serve gzip compressed files if they exist and the client accepts gzip.
  RewriteCond "%{HTTP:Accept-encoding}" "gzip"
  RewriteCond "%{DOCUMENT_ROOT}%{REQUEST_FILENAME}\.gz" -s
  RewriteRule "^(.*)\.(json|tpl|txt)$" "$1\.$2\.gz" [QSA]

  # Serve correct content types, and prevent mod_deflate double gzip.
  RewriteRule "\.json\.gz$" "-" [T=application/json,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.tpl\.gz$" "-" [T=text/plain,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.txt\.gz$" "-" [T=text/plain,E=no-brotli:1,E=no-gzip:1]

  <FilesMatch "(\.json\.gz|\.tpl\.gz|\.txt\.gz)$">
    # Serve correct encoding type.
    Header append Content-Encoding gzip
    # Force proxies to cache gzipped &
    # non-gzipped css/js files separately.
    Header append Vary Accept-Encoding
  </FilesMatch>

default_filter_server_skip_mod_brotli_config: |
  # https://httpd.apache.org/docs/trunk/mod/mod_brotli.html#precompressed
  # Serve brotli compressed files if they exist and the client accepts brotli.
  RewriteCond "%{HTTP:Accept-encoding}" "br"
  RewriteCond "%{DOCUMENT_ROOT}%{REQUEST_FILENAME}\.br" -s
  RewriteRule "^(.*)\.(json|tpl|txt)$" "$1\.$2\.br" [QSA]

  # Serve correct content types, and prevent double compression.
  RewriteRule "\.json\.br$" "-" [T=application/json,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.tpl\.br$" "-" [T=text/plain,E=no-brotli:1,E=no-gzip:1]
  RewriteRule "\.txt\.br$" "-" [T=text/plain,E=no-brotli:1,E=no-gzip:1]

  <FilesMatch "(\.json\.br|\.tpl\.br|\.txt\.br)$">
    # Serve correct encoding type.
    Header append Content-Encoding br
    # Force proxies to cache brotli &
    # nonbrotli files separately.
    Header append Vary Accept-Encoding
    # Remove br language, set by mods-enabled/mime.conf
    RemoveLanguage .br
  </FilesMatch>

# yamllint enable rule:line-length
