# Copyright (c) 2020-present eyeo GmbH
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---

# https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html
vagrant_groups:
  - "backup-clients"

# https://www.vagrantup.com/intro/getting-started/networking.html
vagrant_networks:
  - private_network:
      ip: "10.8.100.85"

# https://www.vagrantup.com/docs/provisioning/ansible.html
vagrant_playbooks:
  - "provision-custom-systems.yml"
  - "provision-backup-clients.yml"

# hostname resolution between hosts
# tasks/os/packages.yml
dns_backup_custom_packages__to_merge:
  avahi-daemon: "present"
  libnss-mdns: "present"

# tasks/os/packages.yml
acl_backup_custom_packages__to_merge:
  acl: "present"

host_specific_custom_users__to_merge:
  backup:
    shell: "/bin/sh"

# local var
backup_dir: "/var/backups/data/{{ inventory_hostname }}"

# tasks/backup.yml
host_specific_backups__to_merge:
  apt:
    name: "tar-backup-etc-apt"
    server: "{{ groups['backup-servers'].0 }}"
    local_pubkey_path: "/etc/ssh/ssh_host_ed25519_key.pub"
    server_pubkey_path: "/opt/backup/keys/id_ed25519.pub"
    user: "backup"
    src: "/etc/apt"
    type: "tar"
    acl:
      enabled: true
    dest: "{{ backup_dir }}/$(date -Iminutes)-etc-apt.tar.gz"
    cron:
      minute: 1
  logrotate.d:
    name: "rsync-backup-etc-logrotate.d"
    server: "{{ groups['backup-servers'].0 }}"
    server_pubkey_path: "/opt/backup/keys/id_ed25519.pub"
    user: "backup"
    src: "/etc/logrotate.d"
    type: "rsync"
    acl:
      enabled: true
    dest: "{{ backup_dir }}/$(date -Iminutes)"
    cron:
      minute: 1
  logrotate.conf:
    name: "rsync-backup-etc-logrotate.conf"
    server: "{{ groups['backup-servers'].0 }}"
    server_pubkey_path: "/opt/backup/keys/id_ed25519.pub"
    user: "backup"
    src: "/etc/logrotate.conf"
    type: "rsync"
    acl:
      enabled: true
    dest: "{{ backup_dir }}/$(date -Iminutes)-logrotate.conf"
    cron:
      minute: 1
