# Copyright (c) 2018-present eyeo GmbH
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---

# https://gitlab.com/eyeo/devops/ansible-role-icinga/-/tree/master/server
icinga_server_name:
  "{{ inventory_hostname }}"
icinga_server_database_name:
  "icinga"
icinga_server_database_password:
  "changeme"
icinga_server_database_user:
  "icinga"

# https://gitlab.com/eyeo/devops/ansible-role-icinga/-/tree/master/web
icinga_web_database_name:
  "icingaweb"
icinga_web_database_password:
  "changeme"
icinga_web_database_user:
  "icingaweb"
icinga_web_server_ipv4_address:
  "10.8.10.8"

# roles/apache2/tasks/main.yml
test_icinga_apache2_sites__to_merge:
  icingaweb2:
    # yamllint disable rule:line-length
    configuration: |
      <VirtualHost *:80>

        ServerAdmin webmaster@localhost
        DocumentRoot "{{ icinga_web_httpd_document_root }}"
        ErrorLog ${APACHE_LOG_DIR}/icingaweb2-error.log
        CustomLog ${APACHE_LOG_DIR}/icingaweb2-access.log combined

        {{ lookup('template', 'roles/icinga/web/templates/apache2/icingaweb2.conf')
         | indent(2) }}

      </VirtualHost>
    # yamllint enable rule:line-length

# https://gitlab.com/eyeo/devops/ansible-role-postgresql
icinga_server_postgresql_config__to_merge:
  listen_addresses: "'*'"
postgresql_service_strategy:
  "restart"

# roles/icinga/server/tasks/generate_host_definitions.yml
# yamllint disable rule:line-length
icinga_host_definition_template: |
  # This host configuration was generated by
  # host_vars/icinga-0.test / provision-icinga-ssh-agents.yml
  # https://icinga.com/docs/icinga2/latest/doc/04-configuration/#hostsconf
  # https://icinga.com/docs/icinga2/latest/doc/09-object-types/#host
  object Host "{{ ansible_fqdn }}" {

    import "generic-host"

  {% if icinga_ssh_agent_ipv6_address %}
    address6 = "{{ icinga_ssh_agent_ipv6_address }}"
  {% endif %}
  {% if icinga_ssh_agent_ipv4_address %}
    address = "{{ icinga_ssh_agent_ipv4_address }}"
  {% endif %}
  {% if icinga_ssh_agent_check_command %}
    check_command = "{{ icinga_ssh_agent_check_command }}"
  {% endif %}

  {% if icinga_ssh_agent_notifications %}
    # https://icinga.com/docs/icinga2/latest/doc/04-configuration/#notificationsconf
  {%  for notification_type, notification_record in icinga_ssh_agent_notifications.items() | sort(attribute='0') %}
    vars.notification["{{ notification_type }}"] = {
  {%    for notification_key, notification_items in notification_record.items() | sort(attribute='0') %}
      {{ notification_key }} = {{ notification_items | to_json }}
  {%    endfor %}
    }
  {%  endfor %}
  {% endif %}

    vars.ansible = {
      groups = [
  {% for group_name, group_hosts in groups.items() | sort(attribute='0') %}
  {%  if inventory_hostname in group_hosts %}
        "{{ group_name }}",
  {%  endif %}
  {% endfor %}
      ]
      os_family = "{{ ansible_os_family }}"
      system = "{{ ansible_system }}"
    }

    vars.custom = {
      plugin_directory = "{{ icinga_ssh_agent_plugin_directory }}"
      remote_user = "{{ icinga_ssh_agent_system_user }}"
    }
  }
# yamllint enable rule:line-length

# provision-icinga-servers.yml
icinga_server_http_service_group:
  ['apache2-servers']
icinga_server_https_service_group:
  ['apache2-servers']

# yamllint disable rule:line-length
# provision-icinga-servers.yml
icinga_server_custom_icinga_services:
  content:
    name: "content"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/content.conf') }}
    assign:
      - "intersection({{ icinga_server_https_service_group | to_json }}, host.vars.ansible.groups)"
  http_response_time:
    name: "http-response-time"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/http_response_time.conf') }}
    assign:
      - "intersection({{ icinga_server_http_service_group | to_json }}, host.vars.ansible.groups)"
  https_response_time:
    name: "https_response_time"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/https_response_time.conf') }}
    assign:
      - "intersection({{ icinga_server_https_service_group | to_json }}, host.vars.ansible.groups)"
  http_port:
    name: "http-port"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/http_port.conf') }}
    assign:
      - "intersection({{ icinga_server_http_service_group | to_json }}, host.vars.ansible.groups)"
  https_port:
    name: "http-port"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/https_port.conf') }}
    assign:
      - "intersection({{ icinga_server_https_service_group | to_json }}, host.vars.ansible.groups)"
# ssl_cert:
#  name: "ssl-cert"
#  service_definition: |
#    {{ common_service_header }}
#    {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/ssl_cert.conf') }}
#  assign:
#    - "intersection({{ icinga_server_http_service_group | to_json }}, host.vars.ansible.groups)"
# yamllint enable rule:line-length

# provision-icinga-servers.yml
icinga_server_monitoring_plugins:
  check_content:
    command: "check_content"
    dest: "{{ icinga_server_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0755"
    package: "curl"
    src: "files/plugins/check_content"
  check_http_response_time:
    command: "check_http_response_time"
    dest: "{{ icinga_server_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    src: "files/plugins/check_http_response_time"
  check_https_response_time:
    command: "check_https_response_time"
    dest: "{{ icinga_server_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    src: "files/plugins/check_https_response_time"
  check_port:
    command: "check_port"
    dest: "{{ icinga_server_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    src: "files/plugins/check_port"
  check_ssl_cert:
    command: "check_ssl_cert"
    dest: "{{ icinga_server_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    src: "files/plugins/check_ssl_cert"

# provision-icinga-ssh-agents.yml
# yamllint disable rule:line-length
# yamllint disable rule:quoted-strings
# https://icinga.com/docs/icinga2/latest/doc/04-configuration/#servicesconf
# https://gitlab.com/eyeo/devops/utilities/monitoring-plugins/-/blob/master/templates/config/services/{{ item.key }}.conf
# https://www.monitoring-plugins.org/doc/man/check_by_ssh.html
icinga_ssh_agents_custom_icinga_services:
  bandwidth:
    name: "bandwidth"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/bandwidth.conf') }}
    assign:
      - 'host.vars.ansible.os_family == "Debian"'
  connections:
    name: "connections"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/connections.conf') }}
    assign:
      - 'host.vars.ansible.system == "Linux"'
  memory:
    name: "memory"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/memory.conf') }}
    assign:
      - 'host.vars.ansible.system == "Linux"'
  raid:
    name: "raid"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/raid.conf') }}
    assign:
      - 'host.vars.ansible.system == "Linux"'
  zombie_procs:
    name: "zombie-processes"
    service_definition: |
      {{ lookup('file', 'roles/monitoring-plugins/files/icinga-services/zombie_procs.conf') }}
    assign:
      - 'host.vars.ansible.system == "Linux"'
# yamllint enable rule:line-length
# yamllint enable rule:quoted-strings

# provision-icinga-ssh-agents.yml
icinga_ssh_agents_monitoring_plugins:
  check_bandwidth:
    dest: "{{ icinga_ssh_agent_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    package: "tcpdump"
    src: "files/plugins/check_bandwidth"
    sudoers_src: "files/sudoers/check_bandwidth"
  check_connections:
    dest: "{{ icinga_ssh_agent_plugin_directory }}"
    src: "files/plugins/check_connections"
    group: "root"
    owner: "root"
    mode: "0775"
  check_memory:
    dest: "{{ icinga_ssh_agent_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    src: "files/plugins/check_memory"
  check_raid:
    dest: "{{ icinga_ssh_agent_plugin_directory }}"
    group: "root"
    owner: "root"
    mode: "0775"
    src: "files/plugins/check_raid"

# https://www.vagrantup.com/docs/vagrantfile/machine_settings.html
vagrant_box:
  "debian/buster64"

# https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html
vagrant_groups:
  - "icinga-servers"
  - "icinga-ssh-agents"
  - "icinga-web-servers"
  - "postgresql-servers"
  - "apache2-servers"

# https://www.vagrantup.com/intro/getting-started/networking.html
vagrant_networks:
  - private_network:
      ip: "10.8.10.8"

# https://www.vagrantup.com/docs/provisioning/ansible.html
vagrant_playbooks:
  - "provision-custom-systems.yml"
  - "provision-postgresql-servers.yml"
  - "provision-icinga-servers.yml"
  - "provision-icinga-web-servers.yml"

# https://www.vagrantup.com/docs/synced-folders/rsync.html
vagrant_rsync:
  true
