# Copyright (c) 2018-present eyeo GmbH
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

---

# action_plugins/merge_variable.py
- name:
    "merge_variable : custom_users"
  merge_variable:
    default: {}
    name: "custom_users"
    suffix: "{{ custom_users_suffix
              | default('custom_users__to_merge') }}"

# https://docs.ansible.com/ansible/latest/modules/user_module.html
- name:
    "users"
  user:
    append: true
    comment: "{{ item.value['comment'] | default(omit) }}"
    create_home: true
    expires: "{{ item.value['expires'] | default(omit) }}"
    force: "{{ item.value['force'] | default(omit) }}"
    group: "{{ item.value['group'] | default(omit) }}"
    groups: "{{ item.value['groups'] | default([]) }}"
    home: "{{ item.value['home'] | default(omit) }}"
    move_home: true
    name: "{{ item.value['name'] | default(item.key) }}"
    password: "{{ item.value['password'] | default(omit) }}"
    remove: true
    shell: "{{ item.value['shell'] | default('/bin/bash') }}"
    state: "{{ item.value['state'] | default('present') }}"
    uid: "{{ item.value['uid'] | default(omit) }}"
  with_dict:
    "{{ custom_users }}"
  loop_control:
    label: "{{ item.key | to_json }}"
  register:
    "custom_user"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/set_fact_module.html
- name:
    "set_fact : set defaults"
  set_fact:
    tmp_item: "{{ item
                | combine({
                  'exists': 'home' in item,
                  'home_mode': item.item.value.home_mode
                    | default(custom_users_default_home_mode
                    | default('0755')),
                  'name': item['name']
                    | default(item.item['key']),
                  'authorized_keys': item.item.value.authorized_keys
                    | default(''),
                })
              }}"
  with_items:
    "{{ custom_user.results }}"
  loop_control:
    label: "{{ item.item['key'] | to_json }}"
  register:
    "paired_tmp_items"

# https://docs.ansible.com/ansible/latest/modules/set_fact_module.html
- name:
    "set_fact : flatten list"
  set_fact:
    custom_user_info:
      "{{ paired_tmp_items.results
        | map(attribute='ansible_facts.tmp_item') | list }}"
  register:
    "custom_user_info"

# https://docs.ansible.com/ansible/latest/modules/file_module.html
- name:
    "users : home directory permissions"
  file:
    mode: "{{ item.home_mode }}"
    path: "{{ item.home }}"
    state: "directory"
  with_items:
    "{{ custom_user_info }}"
  loop_control:
    label: "{{ [item.name, item.home_mode] | to_json }}"
  when:
    "item.exists"
  become:
    true

# https://docs.ansible.com/ansible/latest/modules/authorized_key_module.html
- name:
    "authorized_keys"
  authorized_key:
    exclusive: true
    key: |
      # Generated with Ansible
      {{ item.authorized_keys }}
    manage_dir: true
    user: "{{ item.name }}"
  with_items:
    "{{ custom_user_info }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    "item.exists"
  become:
    true
